# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import core_pb2 as core__pb2
import dataset_pb2 as dataset__pb2


class DatasetManagerStub(object):
    """Missing associated documentation comment in .proto file"""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.List = channel.unary_stream(
                '/anndb_pb.DatasetManager/List',
                request_serializer=core__pb2.EmptyMessage.SerializeToString,
                response_deserializer=dataset__pb2.Dataset.FromString,
                )
        self.Get = channel.unary_unary(
                '/anndb_pb.DatasetManager/Get',
                request_serializer=core__pb2.UUIDRequest.SerializeToString,
                response_deserializer=dataset__pb2.Dataset.FromString,
                )
        self.Create = channel.unary_unary(
                '/anndb_pb.DatasetManager/Create',
                request_serializer=dataset__pb2.Dataset.SerializeToString,
                response_deserializer=dataset__pb2.Dataset.FromString,
                )
        self.Delete = channel.unary_unary(
                '/anndb_pb.DatasetManager/Delete',
                request_serializer=core__pb2.UUIDRequest.SerializeToString,
                response_deserializer=core__pb2.EmptyMessage.FromString,
                )


class DatasetManagerServicer(object):
    """Missing associated documentation comment in .proto file"""

    def List(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Get(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Create(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Delete(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DatasetManagerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'List': grpc.unary_stream_rpc_method_handler(
                    servicer.List,
                    request_deserializer=core__pb2.EmptyMessage.FromString,
                    response_serializer=dataset__pb2.Dataset.SerializeToString,
            ),
            'Get': grpc.unary_unary_rpc_method_handler(
                    servicer.Get,
                    request_deserializer=core__pb2.UUIDRequest.FromString,
                    response_serializer=dataset__pb2.Dataset.SerializeToString,
            ),
            'Create': grpc.unary_unary_rpc_method_handler(
                    servicer.Create,
                    request_deserializer=dataset__pb2.Dataset.FromString,
                    response_serializer=dataset__pb2.Dataset.SerializeToString,
            ),
            'Delete': grpc.unary_unary_rpc_method_handler(
                    servicer.Delete,
                    request_deserializer=core__pb2.UUIDRequest.FromString,
                    response_serializer=core__pb2.EmptyMessage.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'anndb_pb.DatasetManager', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DatasetManager(object):
    """Missing associated documentation comment in .proto file"""

    @staticmethod
    def List(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/anndb_pb.DatasetManager/List',
            core__pb2.EmptyMessage.SerializeToString,
            dataset__pb2.Dataset.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/anndb_pb.DatasetManager/Get',
            core__pb2.UUIDRequest.SerializeToString,
            dataset__pb2.Dataset.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Create(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/anndb_pb.DatasetManager/Create',
            dataset__pb2.Dataset.SerializeToString,
            dataset__pb2.Dataset.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/anndb_pb.DatasetManager/Delete',
            core__pb2.UUIDRequest.SerializeToString,
            core__pb2.EmptyMessage.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)


class DataManagerStub(object):
    """Missing associated documentation comment in .proto file"""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Insert = channel.unary_unary(
                '/anndb_pb.DataManager/Insert',
                request_serializer=dataset__pb2.InsertRequest.SerializeToString,
                response_deserializer=core__pb2.EmptyMessage.FromString,
                )
        self.Remove = channel.unary_unary(
                '/anndb_pb.DataManager/Remove',
                request_serializer=dataset__pb2.RemoveRequest.SerializeToString,
                response_deserializer=core__pb2.EmptyMessage.FromString,
                )


class DataManagerServicer(object):
    """Missing associated documentation comment in .proto file"""

    def Insert(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Remove(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DataManagerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Insert': grpc.unary_unary_rpc_method_handler(
                    servicer.Insert,
                    request_deserializer=dataset__pb2.InsertRequest.FromString,
                    response_serializer=core__pb2.EmptyMessage.SerializeToString,
            ),
            'Remove': grpc.unary_unary_rpc_method_handler(
                    servicer.Remove,
                    request_deserializer=dataset__pb2.RemoveRequest.FromString,
                    response_serializer=core__pb2.EmptyMessage.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'anndb_pb.DataManager', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DataManager(object):
    """Missing associated documentation comment in .proto file"""

    @staticmethod
    def Insert(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/anndb_pb.DataManager/Insert',
            dataset__pb2.InsertRequest.SerializeToString,
            core__pb2.EmptyMessage.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Remove(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/anndb_pb.DataManager/Remove',
            dataset__pb2.RemoveRequest.SerializeToString,
            core__pb2.EmptyMessage.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
